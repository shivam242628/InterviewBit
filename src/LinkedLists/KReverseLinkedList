/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
    public ListNode reverseList(ListNode A, int B) {
        ListNode head = new ListNode(-1);
        ListNode curr = head;
        Stack<Integer> stack = new Stack<>();
        ListNode temp = A;
        boolean isEnd = false;

        while (temp != null) {
            int i = B;
            while (i-- > 0) {
                if (temp != null) {
                    stack.push(temp.val);
                    temp = temp.next;
                } else {
                    isEnd = true;
                }
                if (isEnd) {
                    break;
                }
            }
            while (!stack.isEmpty()) {
                curr.next = new ListNode(stack.pop());
                curr = curr.next;
                curr.next = null;
            }
        }
        while (!stack.isEmpty()) {
            curr.next = new ListNode(stack.pop());
            curr = curr.next;
            curr.next = null;
        }

        return head.next;
    }
}